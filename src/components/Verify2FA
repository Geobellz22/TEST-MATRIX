<<<<<<< HEAD
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const Verify2FA = () => {
  const [code, setCode] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch('/api/verify-2fa', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ code })
      });

      if (response.ok) {
        navigate('/profile');
      } else {
        setError('Failed to verify 2FA. Please try again.');
      }
    } catch (err) {
      setError('Failed to verify 2FA. Please try again.');
    }
  };

  return (
    <div>
      <h2>Verify Two-Factor Authentication</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Enter 2FA code"
          value={code}
          onChange={(e) => setCode(e.target.value)}
          required
        />
        {error && <p style={{ color: 'red' }}>{error}</p>}
        <button type="submit">Verify</button>
      </form>
    </div>
  );
};

export default Verify2FA;
=======
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const Verify2FA = () => {
  const [code, setCode] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch('/api/verify-2fa', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ code })
      });

      if (response.ok) {
        navigate('/profile');
      } else {
        setError('Failed to verify 2FA. Please try again.');
      }
    } catch (err) {
      setError('Failed to verify 2FA. Please try again.');
    }
  };

  return (
    <div>
      <h2>Verify Two-Factor Authentication</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Enter 2FA code"
          value={code}
          onChange={(e) => setCode(e.target.value)}
          required
        />
        {error && <p style={{ color: 'red' }}>{error}</p>}
        <button type="submit">Verify</button>
      </form>
    </div>
  );
};

export default Verify2FA;
>>>>>>> 17e709e417bb91a4e1743ca83d7ccd6b700e3d03
